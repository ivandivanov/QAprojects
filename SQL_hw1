-- 1.Брой потребители
SELECT COUNT(id) AS NumberUsers FROM users;
-- 2.Най-стария потребител
SELECT * FROM users
ORDER BY birthDate ASC
LIMIT 1;
-- 3. Най-младия потребител
SELECT * FROM users
ORDER BY birthDate DESC
LIMIT 1;
-- 4. Колко юзъра са регистрирани с мейли от abv и колко от gmail и колко с различни от двата
SELECT COUNT(id) AS abv_users FROM users 
WHERE email LIKE '%@abv.bg';
SELECT COUNT(id) AS gmail_users FROM users 
WHERE email LIKE '%@gmail.com';
SELECT COUNT(id) AS NOT_abv_gmail_users FROM users 
WHERE email  NOT LIKE '%gmail%' AND email  NOT LIKE '%abv%';
-- 5. Кои users са banned
SELECT username Banned_Users FROM users
WHERE isbanned = 1;
-- 6. Изкарайте всички потребители от базата като ги наредите по име в азбучен ред и дата на раждане(от най-младия към най-възрастния).
SELECT username, birthDate FROM users ORDER BY userName ASC, birthDate DESC;
-- 7. Изкарайте всички потребители от базата, на които потребителското име започва с a.
SELECT username FROM users
WHERE username LIKE 'a%';
-- 8. Изкарайте всички потребители от базата, които съдържат а в username името си
SELECT username FROM users
WHERE username REGEXP 'a';
-- 9. Изкарайте всички потребители от базата, чието име се състои от 2 имена
SELECT username FROM users
WHERE username LIKE '% %';
-- 10. Регистрирайте 1 юзър през UI-а и го забранете след това от базата
UPDATE users
SET isBanned = 1
WHERE username = 'go_BAN_me';
-- 11. Брой на всички постове
SELECT COUNT(id) NumberOfPosts FROM posts;
-- 12. Брой на всички постове групирани по статуса на post-a
SELECT COUNT(id) NumberOfPosts, 'private' AS Status FROM posts WHERE postStatus = 'private'
UNION
SELECT COUNT(id) NumberOfPosts, 'public' AS Status FROM posts WHERE postStatus = 'public';
-- 13. Намерете поста/овете с най-къс caption ОЩЕ ТРЯБВА
SELECT * FROM posts
WHERE caption BETWEEN 0 AND 2
ORDER BY LENGTH(caption) ASC;
-- 14. Покажете поста с най-дълъг caption
SELECT * FROM posts
ORDER BY LENGTH(caption) DESC
LIMIT 1;
-- 15. Кой потребител има най-много постове. Използвайте join заявка
SELECT users.username, COUNT(posts.id) NumberPosts
FROM posts
LEFT JOIN users
ON posts.userId = users.id
GROUP BY username
ORDER BY NumberPosts DESC;
-- 16. Кои потребители имат най-малко постове. Използвайте join заявка
SELECT users.username, COUNT(posts.id) NumberPosts
FROM posts
LEFT JOIN users
ON posts.userId = users.id
GROUP BY username
ORDER BY NumberPosts;
-- 17. Колко потребителя с по 1 пост имаме. Използвайте join заявка, having clause и вложени заявки
SELECT COUNT(users.id) NumberUsers, users.username
FROM users
LEFT JOIN posts
ON users.id = posts.userId
GROUP BY username
HAVING COUNT(posts.id) = 1;



-- 18. Колко потребителя с по малко от 5 поста имаме. Използвайте join заявка, having clause и вложени заявки


-- 19. Кои са постовете с най-много коментари. Използвайте вложена заявка и where clause


-- 20. Покажете най-стария пост. Може да използвате order или с aggregate function


-- 21. Покажете най-новия пост. Може с order или с aggregate function


-- 22. Покажете всички постове с празен caption
SELECT * FROM posts
WHERE caption LIKE ' ';

-- 23. Създайте потребител през UI-а, добавете му public пост през базата и проверете дали се е създал през UI-а


-- 24. Покажете всички постове и коментарите им ако имат такива

-- 25. Покажете само постове с коментари и самите коментари

-- 26. Покажете името на потребителя с най-много коментари. Използвайте join клауза

-- 27. Покажете всички коментари, към кой пост принадлежат и кой ги е направил. Използвайте join клауза
-- 28. Кои потребители са like-нали най-много постове

-- 29. Кои потребители не са like-вали постове


-- 30. Кои постове имат like-ове. Покажете id на поста и caption


-- 31. Кои постове имат най-много like-ове. Покажете id на поста и caption

-- 32. Покажете всички потребители, които не follow-ват никого


-- 33. Покажете всички потребители, които не са follow-нати от никого


-- 34. Регистрирайте потребител през UI. Follow-нете някой съществуващ потребител и проверете дали записа го има в базата

